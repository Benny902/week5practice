name: Microblog CI

on: # Runs on every push and pull request
  push:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix: # Defines a matrix for versions
        node-version: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
      - name: Run backend tests
        run: |
          cd backend
          npm test | tee test-results.log
          echo "Build finished successfully at $(date)" >> test-results.log
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results-node${{ matrix.node-version }}
          path: backend/test-results.log
      - name: Set job start time
        run: echo "JOB_START_TIME=$(date +%s)" >> $GITHUB_ENV
      - name: Notify Slack (Backend)
        if: always() # always run this step even if tests fail
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "*Job:* Backend (Node.js ${{ matrix.node-version }})\n*Status:* ${{ job.status }}\n*Duration:* $(( $(date +%s) - ${{ env.JOB_START_TIME }} )) seconds\n*Workflow:* ${{ github.workflow }}\n*Run:* #${{ github.run_number }}\n*Repo:* ${{ github.repository }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Echo job completion
        if: success()
        run: echo "Backend job for Node.js ${{ matrix.node-version }} completed successfully!"

  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
      - name: Serve frontend for testing # Adds a final step to validate service availability
        run: |
          cd frontend
          node server.js &
          sleep 3
          curl -I http://localhost:4000
      - name: Set job start time
        run: echo "JOB_START_TIME=$(date +%s)" >> $GITHUB_ENV
      - name: Notify Slack (Frontend)
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "*Job:* Frontend (Node.js ${{ matrix.node-version }})\n*Status:* ${{ job.status }}\n*Duration:* $(( $(date +%s) - ${{ env.JOB_START_TIME }} )) seconds\n*Workflow:* ${{ github.workflow }}\n*Run:* #${{ github.run_number }}\n*Repo:* ${{ github.repository }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Echo job completion
        if: success()
        run: echo "Frontend job for Node.js ${{ matrix.node-version }} completed successfully!"